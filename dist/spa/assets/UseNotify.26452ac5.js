import{f as P,j as q,z as C,N as A,O as R,l as B,h as I,i as Q,q as V,P as j,R as F,p as O,S as D,T as N}from"./index.a75e0a44.js";import{u as T}from"./use-quasar.ff518ee8.js";var K=P({name:"QForm",props:{autofocus:Boolean,noErrorFocus:Boolean,noResetFocus:Boolean,greedy:Boolean,onSubmit:Function},emits:["reset","validationSuccess","validationError"],setup(n,{slots:v,emit:f}){const c=V(),i=q(null);let u=0;const s=[];function m(e){const a=typeof e=="boolean"?e:n.noErrorFocus!==!0,d=++u,h=(t,o)=>{f("validation"+(t===!0?"Success":"Error"),o)},x=t=>{const o=t.validate();return typeof o.then=="function"?o.then(r=>({valid:r,comp:t}),r=>({valid:!1,comp:t,err:r})):Promise.resolve({valid:o,comp:t})};return(n.greedy===!0?Promise.all(s.map(x)).then(t=>t.filter(o=>o.valid!==!0)):s.reduce((t,o)=>t.then(()=>x(o).then(r=>{if(r.valid===!1)return Promise.reject(r)})),Promise.resolve()).catch(t=>[t])).then(t=>{if(t===void 0||t.length===0)return d===u&&h(!0),!0;if(d===u){const{comp:o,err:r}=t[0];if(r!==void 0&&console.error(r),h(!1,o),a===!0){const S=t.find(({comp:E})=>typeof E.focus=="function"&&j(E.$)===!1);S!==void 0&&S.comp.focus()}}return!1})}function y(){u++,s.forEach(e=>{typeof e.resetValidation=="function"&&e.resetValidation()})}function b(e){e!==void 0&&F(e);const a=u+1;m().then(d=>{a===u&&d===!0&&(n.onSubmit!==void 0?f("submit",e):e!==void 0&&e.target!==void 0&&typeof e.target.submit=="function"&&e.target.submit())})}function g(e){e!==void 0&&F(e),f("reset"),O(()=>{y(),n.autofocus===!0&&n.noResetFocus!==!0&&l()})}function l(){D(()=>{if(i.value===null)return;const e=i.value.querySelector("[autofocus][tabindex], [data-autofocus][tabindex]")||i.value.querySelector("[autofocus] [tabindex], [data-autofocus] [tabindex]")||i.value.querySelector("[autofocus], [data-autofocus]")||Array.prototype.find.call(i.value.querySelectorAll("[tabindex]"),a=>a.tabIndex>-1);e!=null&&e.focus({preventScroll:!0})})}C(N,{bindComponent(e){s.push(e)},unbindComponent(e){const a=s.indexOf(e);a>-1&&s.splice(a,1)}});let p=!1;return A(()=>{p=!0}),R(()=>{p===!0&&n.autofocus===!0&&l()}),B(()=>{n.autofocus===!0&&l()}),Object.assign(c.proxy,{validate:m,resetValidation:y,submit:b,reset:g,focus:l,getValidationComponents:()=>s}),()=>I("form",{class:"q-form",ref:i,onSubmit:b,onReset:g},Q(v.default))}});function M(){const n=T();return{notifySuccess:c=>{n.notify({type:"positive",message:c||"All right !"})},notifyError:c=>{n.notify({type:"negative",message:c||"Failed !"})}}}export{K as Q,M as u};
